"""
Django settings for my_sp project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r!=scbstyr32swbo_ttywkgbi44m-yhkw6vf!xl96irjtavf0)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'djangosaml2',
    'django_extensions'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'djangosaml2.middleware.SamlSessionMiddleware'
]

ROOT_URLCONF = 'my_sp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_sp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 添加配置，修改默认User MoDEL
AUTH_USER_MODEL = 'accounts.User'

# djangosaml2 settings
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'accounts.authentication.ModifiedSaml2Backend',
]

# SAML2 SP Config
import saml2
from saml2.saml import  NAMEID_FORMAT_UNSPECIFIED, NAME_FORMAT_BASIC
from saml2.sigver import get_xmlsec_binary
# from my_sp.settings import DEBUG, BASE_DIR
import os

SAML_ENTITY_URL = 'http://localhost:8000/saml2'

CONFIG = {
    'debug' : DEBUG,
    'xmlsec_binary': get_xmlsec_binary(['/usr/bin/xmlsec1']),
    'entityid': '{}/metadata'.format(SAML_ENTITY_URL),

    'service': {
        'sp': {
            'name': 'Django SAML2 SP',
            'endpoints': {
                'assertion_consumer_service': [
                    ('{}/acs/'.format(SAML_ENTITY_URL), saml2.BINDING_HTTP_POST)
                ],
                'single_logout_service': [
                    ('{}/ls/post'.format(SAML_ENTITY_URL), saml2.BINDING_HTTP_POST),
                    ('{}/ls/redirect'.format(SAML_ENTITY_URL), saml2.BINDING_HTTP_REDIRECT),
                ],
            },
            'name_id_format': [NAMEID_FORMAT_UNSPECIFIED],
            'authn_requests_signed': False, # 
            'want_assertions_signed': False,
            'allow_unsolicited': True,
             # attributes that this project need to identify a user
            'required_attributes': ['PartnerSlug',
                                  'Email',
                                  'FirstName','LastName'],

            # attributes that may be useful to have but not required
            'optional_attributes': ['MemberLevel'],
            'requested_attribute_name_format': NAME_FORMAT_BASIC
        },
    },

    'attribute_map_dir': os.path.join(BASE_DIR, 'accounts/saml2attribute_maps'),
    'metadata': {
        'local': [os.path.join(BASE_DIR, 'accounts/idp/idp_metadata.xml')],
    },

    # Signing
    'key_file': BASE_DIR / 'accounts/certificates/private.key',
    'cert_file': BASE_DIR / 'accounts/certificates/public.cert',
    # Encryption
    'encryption_keypairs': [{
        'key_file': BASE_DIR / 'accounts/certificates/private.key',
        'cert_file': BASE_DIR / 'accounts/certificates/public.cert',
    }],
    'valid_for': 365 * 24, 
}

SAML_CONFIG = CONFIG